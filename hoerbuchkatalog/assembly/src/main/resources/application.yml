OAUTH2_BASEURL: http://localhost:8081/auth
OAUTH2_REALM: dev
OAUTH2_OIDC_URL: ${OAUTH2_BASEURL}/realms/${OAUTH2_REALM}/protocol/openid-connect
OAUTH2_CLIENT_ID: u53r
OAUTH2_CLIENT_SECRET: secr3t

hoerbuchkatalog:
  directory: ./var/wbh/hoerbuchkatalog
  cron:
    expression: 0 15 5 * * MON-FRI
  suchergebnisse:
    anzahl: 1000
  wbh:
    gesamtdat:
      filename: Gesamt.dat
      charset: ISO-8859-15

hoererdaten:
  directory: ./var/wbh/nutzerdaten

cdlieferung:
  directory: ./var/wbh/nutzerdaten

repository:
  path: ./var

lucene:
  index:
    directory: ${hoerbuchkatalog.directory}/lucene

spring:
  redis:
    host:
    port: 6379
  mail:
    default-encoding: UTF-8
    host:
    protocol: smtp
    test-connection: true
    properties:
      mail:
        debug: false
        smtp:
          debug: false
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
            client-name: microservice
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            authorization-uri: ${OAUTH2_OIDC_URL}/auth
            token-uri: ${OAUTH2_OIDC_URL}/token
            user-info-uri: ${OAUTH2_OIDC_URL}/userinfo
            jwk-set-uri: ${OAUTH2_OIDC_URL}/certs
            user-name-attribute: preferred_username
server:
  port: 8080
  compression:
    enabled: false
  error:
    whitelabel:
      enabled: false
    include-stacktrace: always
  http2:
    enabled: true

keycloak:
  auth-server-url: ${OAUTH2_BASEURL}
  ssl-required: none
  realm: ${OAUTH2_REALM}
  resource: ${OAUTH2_CLIENT_ID}
  credentials:
    secret: ${OAUTH2_CLIENT_SECRET}
  public-client: true
  use-resource-role-mappings: true
  principal-attribute: preferred_username

management:
  context-path: /actuator
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      enabled: true
      show-details: ALWAYS

springdoc:
  api-docs:
    enabled: true
    path: /v1/private/swagger
  swagger-ui:
    enabled: true
    path: /v1/private/swagger

logging:
  level:
    root: ERROR
    wbh.bookworm.hoerbuchkatalog.assembly: ERROR
    wbh.bookworm.hoerbuchkatalog.webservice: ERROR
    wbh.bookworm.hoerbuchkatalog.app: ERROR
    wbh.bookworm.hoerbuchkatalog.repository: ERROR
    wbh.bookworm.hoerbuchkatalog.domain: ERROR
    aoc.mikrokosmos: ERROR
    aoc.mikrokosmos.io.dataformat.CsvFormat: ERROR
    aoc.mikrokosmos.io.dataformat.LineFileParser: ERROR
    aoc.mikrokosmos.io: ERROR
    aoc.mikrokosmos.fs: ERROR
    aoc.mikrokosmos.ddd.event: ERROR
    aoc.mikrokosmos.ddd.repository: ERROR
    aoc.mikrokosmos.ddd.search: ERROR
    eu.artofcoding: ERROR
    org.keycloak: DEBUG
    org.eclipse.jetty: ERROR
    org.springframework.boot.actuator: ERROR
    org.springframework.boot.security: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.servlet.handler: ERROR
    org.springframework.web: ERROR
    org.springframework.scheduling: ERROR
    org.springframework.beans.factory.support: ERROR
    org.springframework: ERROR
    org.reflections: ERROR
