<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2011-2020 art of coding UG, https://www.art-of-coding.eu
  ~ Alle Rechte vorbehalten. Nutzung unterliegt Lizenzbedingungen.
  ~ All rights reserved. Use is subject to license terms.
  -->

<!--
  
  This is the XML document type definition (DTD) for SMIL 1.0.
  
  Date: 1998/06/15 08:56:30
  
  Authors: 
      Jacco van Ossenbruggen <jrvosse@cwi.nl> 
      Sjoerd Mullender       <sjoerd@cwi.nl>
  
  Further information about SMIL is available at:
  
        http://www.w3.org/AudioVideo/
  
-->
<!-- Generally useful entities -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
           vc:maxVersion="1.1" vc:minVersion="1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning">
    <xs:attributeGroup name="id-attr">
        <xs:attribute name="id" type="xs:ID"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="title-attr">
        <xs:attribute name="title"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="skip-attr">
        <xs:attribute name="skip-content" default="true">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="true"/>
                    <xs:enumeration value="false"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="desc-attr">
        <xs:attributeGroup ref="title-attr"/>
        <xs:attribute name="abstract"/>
        <xs:attribute name="author"/>
        <xs:attribute name="copyright"/>
    </xs:attributeGroup>
    <!-- =================== SMIL Document ===================================== -->
    <!-- The root element SMIL contains all other elements. -->
    <xs:element name="smil">
        <xs:complexType>
            <xs:sequence>
                <xs:element minOccurs="0" ref="head"/>
                <xs:element minOccurs="0" ref="body"/>
            </xs:sequence>
            <xs:attributeGroup ref="smil-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="smil-attlist">
        <xs:attributeGroup ref="id-attr"/>
    </xs:attributeGroup>
    <!-- =================== The Document Head ================================= -->
    <xs:element name="layout-section" abstract="true"/>
    <xs:complexType name="head-element">
        <xs:sequence minOccurs="0">
            <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
            <xs:sequence>
                <xs:element ref="layout-section"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" ref="meta"/>
            </xs:sequence>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="head">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="head-element">
                    <xs:attributeGroup ref="head-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="head-attlist">
        <xs:attributeGroup ref="id-attr"/>
    </xs:attributeGroup>
    <!-- =================== Layout Element ==================================== -->
    <!--
      Layout contains the region and root-layout elements defined by
      smil-basic-layout or other elements defined an external layout
      mechanism.
    -->
    <xs:element name="layout" substitutionGroup="layout-section">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="any">
                    <xs:attributeGroup ref="layout-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="layout-attlist">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attribute name="type" default="text/smil-basic-layout"/>
    </xs:attributeGroup>
    <!-- =================== Region Element =================================== -->
    <xs:attributeGroup name="viewport-attrs">
        <xs:attribute name="height"/>
        <xs:attribute name="width"/>
        <xs:attribute name="background-color"/>
    </xs:attributeGroup>
    <xs:element name="region">
        <xs:complexType>
            <xs:attributeGroup ref="region-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="region-attlist">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attributeGroup ref="title-attr"/>
        <xs:attributeGroup ref="viewport-attrs"/>
        <xs:attribute name="left" default="0"/>
        <xs:attribute name="top" default="0"/>
        <xs:attribute name="z-index" default="0"/>
        <xs:attribute name="fit" default="hidden">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="hidden"/>
                    <xs:enumeration value="fill"/>
                    <xs:enumeration value="meet"/>
                    <xs:enumeration value="scroll"/>
                    <xs:enumeration value="slice"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attributeGroup ref="skip-attr"/>
    </xs:attributeGroup>
    <!-- =================== Root-layout Element ================================ -->
    <xs:element name="root-layout">
        <xs:complexType>
            <xs:attributeGroup ref="root-layout-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="root-layout-attlist">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attributeGroup ref="title-attr"/>
        <xs:attributeGroup ref="viewport-attrs"/>
        <xs:attributeGroup ref="skip-attr"/>
    </xs:attributeGroup>
    <!-- =================== Meta Element======================================= -->
    <xs:element name="meta">
        <xs:complexType>
            <xs:attributeGroup ref="meta-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="meta-attlist">
        <xs:attribute name="name" use="required" type="xs:NMTOKEN"/>
        <xs:attribute name="content" use="required"/>
        <xs:attributeGroup ref="skip-attr"/>
    </xs:attributeGroup>
    <!-- =================== The Document Body ================================= -->
    <xs:element name="media-object" abstract="true" substitutionGroup="schedule"/>
    <xs:element name="schedule" abstract="true"/>
    <xs:element name="inline-link" abstract="true" substitutionGroup="link"/>
    <xs:element name="assoc-link" abstract="true">
        <xs:complexType>
            <xs:attributeGroup ref="anchor-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="link" abstract="true">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="schedule"/>
                <xs:element ref="switch"/>
            </xs:choice>
            <xs:attributeGroup ref="a-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:group name="container-content">
        <xs:choice>
            <xs:element ref="schedule"/>
            <xs:element ref="switch"/>
            <xs:element ref="link"/>
        </xs:choice>
    </xs:group>
    <xs:group name="body-content">
        <xs:sequence>
            <xs:group ref="container-content"/>
        </xs:sequence>
    </xs:group>
    <xs:element name="body">
        <xs:complexType>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="body-content"/>
            <xs:attributeGroup ref="body-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="body-attlist">
        <xs:attributeGroup ref="id-attr"/>
    </xs:attributeGroup>
    <!-- =================== Synchronization Attributes ======================== -->
    <xs:attributeGroup name="sync-attributes">
        <xs:attribute name="begin"/>
        <xs:attribute name="end"/>
    </xs:attributeGroup>
    <!-- =================== Switch Parameter Attributes ======================= -->
    <xs:attributeGroup name="system-attribute">
        <xs:attribute name="system-bitrate"/>
        <xs:attribute name="system-language"/>
        <xs:attribute name="system-required" type="xs:NMTOKEN"/>
        <xs:attribute name="system-screen-size"/>
        <xs:attribute name="system-screen-depth"/>
        <xs:attribute name="system-captions">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="on"/>
                    <xs:enumeration value="off"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="system-overdub-or-caption">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="caption"/>
                    <xs:enumeration value="overdub"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <!-- =================== Fill Attribute ==================================== -->
    <xs:attributeGroup name="fill-attribute">
        <xs:attribute name="fill" default="remove">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="remove"/>
                    <xs:enumeration value="freeze"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <!-- =================== The Parallel Element ============================== -->
    <xs:group name="par-content">
        <xs:sequence>
            <xs:group ref="container-content"/>
        </xs:sequence>
    </xs:group>
    <xs:element name="par" substitutionGroup="schedule">
        <xs:complexType>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="par-content"/>
            <xs:attributeGroup ref="par-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="par-attlist">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attributeGroup ref="desc-attr"/>
        <xs:attribute name="endsync" default="last"/>
        <xs:attribute name="dur"/>
        <xs:attribute name="repeat" default="1"/>
        <xs:attribute name="region" type="xs:IDREF"/>
        <xs:attributeGroup ref="sync-attributes"/>
        <xs:attributeGroup ref="system-attribute"/>
    </xs:attributeGroup>
    <!-- =================== The Sequential Element ============================ -->
    <xs:group name="seq-content">
        <xs:sequence>
            <xs:group ref="container-content"/>
        </xs:sequence>
    </xs:group>
    <xs:element name="seq" substitutionGroup="schedule">
        <xs:complexType>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="seq-content"/>
            <xs:attributeGroup ref="seq-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="seq-attlist">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attributeGroup ref="desc-attr"/>
        <xs:attribute name="dur"/>
        <xs:attribute name="repeat" default="1"/>
        <xs:attribute name="region" type="xs:IDREF"/>
        <xs:attributeGroup ref="sync-attributes"/>
        <xs:attributeGroup ref="system-attribute"/>
    </xs:attributeGroup>
    <!-- =================== The Switch Element ================================ -->
    <!--
      In the head, a switch may contain only layout elements,
      in the body, only container elements. However, this
      constraint cannot be expressed in the DTD (?), so
      we allow both:
    -->
    <xs:group name="switch-content">
        <xs:choice>
            <xs:element ref="layout"/>
            <xs:group ref="container-content"/>
        </xs:choice>
    </xs:group>
    <xs:element name="switch" substitutionGroup="layout-section">
        <xs:complexType>
            <xs:group minOccurs="0" maxOccurs="unbounded" ref="switch-content"/>
            <xs:attributeGroup ref="switch-attlist"/>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="switch-attlist">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attributeGroup ref="title-attr"/>
    </xs:attributeGroup>
    <!-- =================== Media Object Elements ============================= -->
    <!--
      SMIL only defines the structure. The real media data is
      referenced by the src attribute of the media objects.
    -->
    <!--
      Furthermore, they have the following attributes as defined
      in the SMIL specification:
    -->
    <xs:attributeGroup name="mo-attributes">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attributeGroup ref="desc-attr"/>
        <xs:attribute name="region" type="xs:IDREF"/>
        <xs:attribute name="alt"/>
        <xs:attribute name="longdesc"/>
        <xs:attribute name="src"/>
        <xs:attribute name="type"/>
        <xs:attribute name="dur"/>
        <xs:attribute name="repeat" default="1"/>
        <xs:attributeGroup ref="fill-attribute"/>
        <xs:attributeGroup ref="sync-attributes"/>
        <xs:attributeGroup ref="system-attribute"/>
    </xs:attributeGroup>
    <!--
      Most info is in the attributes, media objects are empty or
      contain associated link elements:
    -->
    <xs:complexType name="mo-content">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" ref="assoc-link"/>
        </xs:sequence>
    </xs:complexType>
    <xs:attributeGroup name="clip-attrs">
        <xs:attribute name="clip-begin"/>
        <xs:attribute name="clip-end"/>
    </xs:attributeGroup>
    <xs:element name="ref" substitutionGroup="media-object">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mo-content">
                    <xs:attributeGroup ref="ref-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="audio" substitutionGroup="media-object">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mo-content">
                    <xs:attributeGroup ref="audio-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="img" substitutionGroup="media-object">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mo-content">
                    <xs:attributeGroup ref="img-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="video" substitutionGroup="media-object">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mo-content">
                    <xs:attributeGroup ref="video-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="text" substitutionGroup="media-object">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mo-content">
                    <xs:attributeGroup ref="text-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="textstream" substitutionGroup="media-object">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mo-content">
                    <xs:attributeGroup ref="textstream-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="animation" substitutionGroup="media-object">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mo-content">
                    <xs:attributeGroup ref="animation-attlist"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:attributeGroup name="ref-attlist">
        <xs:attributeGroup ref="mo-attributes"/>
        <xs:attributeGroup ref="clip-attrs"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="audio-attlist">
        <xs:attributeGroup ref="mo-attributes"/>
        <xs:attributeGroup ref="clip-attrs"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="video-attlist">
        <xs:attributeGroup ref="mo-attributes"/>
        <xs:attributeGroup ref="clip-attrs"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="animation-attlist">
        <xs:attributeGroup ref="mo-attributes"/>
        <xs:attributeGroup ref="clip-attrs"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="textstream-attlist">
        <xs:attributeGroup ref="mo-attributes"/>
        <xs:attributeGroup ref="clip-attrs"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="text-attlist">
        <xs:attributeGroup ref="mo-attributes"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="img-attlist">
        <xs:attributeGroup ref="mo-attributes"/>
    </xs:attributeGroup>
    <!-- =================== Link Elements ===================================== -->
    <xs:attributeGroup name="smil-link-attributes">
        <xs:attributeGroup ref="id-attr"/>
        <xs:attributeGroup ref="title-attr"/>
        <xs:attribute name="href" use="required"/>
        <xs:attribute name="show" default="replace">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:enumeration value="replace"/>
                    <xs:enumeration value="new"/>
                    <xs:enumeration value="pause"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <!-- =================== Inline Link Element =============================== -->
    <xs:element name="a" substitutionGroup="inline-link"/>
    <xs:attributeGroup name="a-attlist">
        <xs:attributeGroup ref="smil-link-attributes"/>
    </xs:attributeGroup>
    <!-- =================== Associated Link Element =========================== -->
    <xs:element name="anchor" substitutionGroup="assoc-link"/>
    <xs:attributeGroup name="anchor-attlist">
        <xs:attributeGroup ref="skip-attr"/>
        <xs:attributeGroup ref="smil-link-attributes"/>
        <xs:attributeGroup ref="sync-attributes"/>
        <xs:attribute name="coords"/>
    </xs:attributeGroup>
    <xs:complexType name="any" mixed="true">
        <xs:sequence>
            <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
