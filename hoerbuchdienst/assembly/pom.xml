<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>wbh.bookworm</groupId>
        <artifactId>wbh.bookworm.hoerbuchdienst</artifactId>
        <version>LocalBuild</version>
    </parent>
    <artifactId>wbh.bookworm.hoerbuchdienst.assembly</artifactId>
    <name>wbh-online.de HÃ¶rbuchdienst Assembly</name>
    <packaging>pom</packaging>
    <properties>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH-mm-ss'Z'</maven.build.timestamp.format>
        <nginx.release>1.17-alpine</nginx.release>
        <nginx.hostname>nginx.${domain}</nginx.hostname>
        <vault.release>1.4.0</vault.release>
        <vault.hostname>vault.${domain}</vault.hostname>
        <kes.release>v0.8.2</kes.release>
        <kes.hostname>kes.${domain}</kes.hostname>
        <kes_client_tls_key_file>/var/local/kes/minio.key</kes_client_tls_key_file>
        <kes_client_tls_cert_file>/var/local/kes/minio.cert</kes_client_tls_cert_file>
        <minio.release>RELEASE.2020-05-16T01-33-21Z</minio.release>
        <minio.hostname>s3.${domain}</minio.hostname>
        <mc.release>RELEASE.2020-05-16T01-44-37Z</mc.release>
        <rabbitmq.release>3.8.3-management-alpine</rabbitmq.release>
        <rabbitmq.hostname>rabbitmq.${domain}</rabbitmq.hostname>
        <rabbitmq.nodename>rabbitmq@${rabbitmq.hostname}</rabbitmq.nodename>
        <!--
        <keycloak.postgres.release>12-alpine</keycloak.postgres.release>
        <keycloak.postgres.hostname>keycloakpostgres.${domain}</keycloak.postgres.hostname>
        <keycloak.release>10.0.2</keycloak.release>
        <keycloak.hostname>keycloak.${domain}</keycloak.hostname>
        -->
        <hbd.release>${maven.build.timestamp}</hbd.release>
        <hbd.hostname>hoerbuchdienst.${domain}</hbd.hostname>
        <docker.dir>${project.basedir}/src/main/docker</docker.dir>
        <docker.project.name>hbd</docker.project.name>
        <docker-compose.dir>${project.basedir}/target/${project.artifactId}-${project.version}</docker-compose.dir>
        <docker-compose.file>${docker-compose.dir}/docker-compose.yml</docker-compose.file>
        <docker-compose.build.file>${docker-compose.dir}/docker-compose.build.yml</docker-compose.build.file>
        <docker-compose.dev.file>${docker-compose.dir}/docker-compose.dev.yml</docker-compose.dev.file>
        <docker-compose.prod.file>${docker-compose.dir}/docker-compose.prod.yml</docker-compose.prod.file>
    </properties>
    <profiles>
        <profile>
            <id>bookworm.docker.local</id>
            <properties>
                <domain>shard1.local</domain>
                <tls.path>/etc/letsencrypt/selfsigned</tls.path>
                <nginx.enable.servers>
                    vault minio rabbitmq hoerbuchdienst
                </nginx.enable.servers>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <version>4.0.0</version>
                        <configuration>
                            <projectName>dev-wbh-hbd-${maven.build.timestamp}</projectName>
                        </configuration>
                        <!--<executions>
                            <execution>
                                <id>dev-up</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>up</goal>
                                </goals>
                                <configuration>
                                    <composeFiles>
                                        <composeFile>${docker-compose.file}</composeFile>
                                        <composeFile>${docker-compose.dev.file}</composeFile>
                                    </composeFiles>
                                    <detachedMode>true</detachedMode>
                                    <removeOrphans>true</removeOrphans>
                                </configuration>
                            </execution>
                        </executions>-->
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>bookworm.docker.prod</id>
            <properties>
                <domain>${domain}</domain>
                <tls.path>/etc/letsencrypt/live</tls.path>
                <nginx.enable.servers>
                    minio hoerbuchdienst
                </nginx.enable.servers>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <version>4.0.0</version>
                        <configuration>
                            <projectName>prod-wbh-hbd-${maven.build.timestamp}</projectName>
                        </configuration>
                        <!--<executions>
                            <execution>
                                <id>prod-up</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>up</goal>
                                </goals>
                                <configuration>
                                    <composeFiles>
                                        <composeFile>${docker-compose.file}</composeFile>
                                        <composeFile>${docker-compose.prod.file}</composeFile>
                                    </composeFiles>
                                    <detachedMode>true</detachedMode>
                                    <removeOrphans>true</removeOrphans>
                                </configuration>
                            </execution>
                        </executions>-->
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>prepare-docker-compose</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/container.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>dist</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/dist.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>${project.artifactId}-${hbd.release}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <version>4.0.0</version>
                <configuration>
                    <verbose>true</verbose>
                    <host>unix:///var/run/docker.sock</host>
                    <composeFiles>
                        <composeFile>${docker-compose.file}</composeFile>
                        <composeFile>${docker-compose.build.file}</composeFile>
                    </composeFiles>
                    <envVars>
                        <DOMAIN>${domain}</DOMAIN>
                        <NGINX_RELEASE>${nginx.release}</NGINX_RELEASE>
                        <KES_RELEASE>${kes.release}</KES_RELEASE>
                        <MINIO_RELEASE>${minio.release}</MINIO_RELEASE>
                        <MC_RELEASE>${mc.release}</MC_RELEASE>
                        <RABBITMQ_RELEASE>${rabbitmq.release}</RABBITMQ_RELEASE>
                        <HBD_RELEASE>${hbd.release}</HBD_RELEASE>
                    </envVars>
                    <buildArgs>
                        <noCache>true</noCache>
                        <forceRm>true</forceRm>
                    </buildArgs>
                    <removeOrphans>true</removeOrphans>
                </configuration>
                <executions>
                    <execution>
                        <id>build-hbd-rproxy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>hbd-rproxy</services>
                            <buildArgs>
                                <args>
                                    <NGINX_RELEASE>${nginx.release}</NGINX_RELEASE>
                                    <HBD_RELEASE>${hbd.release}</HBD_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-vault</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>vault</services>
                            <buildArgs>
                                <args>
                                    <VAULT_RELEASE>${vault.release}</VAULT_RELEASE>
                                    <HBD_RELEASE>${hbd.release}</HBD_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-kes</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>kes</services>
                            <buildArgs>
                                <args>
                                    <KES_RELEASE>${kes.release}</KES_RELEASE>
                                    <HBD_RELEASE>${hbd.release}</HBD_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-minio</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>minio</services>
                            <buildArgs>
                                <args>
                                    <MINIO_RELEASE>${minio.release}</MINIO_RELEASE>
                                    <HBD_RELEASE>${hbd.release}</HBD_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-mc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>mc</services>
                            <buildArgs>
                                <args>
                                    <MC_RELEASE>${mc.release}</MC_RELEASE>
                                    <HBD_RELEASE>${hbd.release}</HBD_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-rabbitmq</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>rabbitmq</services>
                            <buildArgs>
                                <args>
                                    <RABBITMQ_RELEASE>${rabbitmq.release}</RABBITMQ_RELEASE>
                                    <HBD_RELEASE>${hbd.release}</HBD_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
