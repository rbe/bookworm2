<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>wbh.bookworm</groupId>
        <artifactId>wbh.bookworm.cms</artifactId>
        <version>LocalBuild</version>
    </parent>
    <artifactId>wbh.bookworm.cms.assembly</artifactId>
    <packaging>pom</packaging>
    <properties>
        <maven.build.timestamp.format>yyyy-MM-dd-HH-mm</maven.build.timestamp.format>
        <domain>${domain}</domain>
        <alpine.release>3.12</alpine.release>
        <mysql.release>5.6</mysql.release>
        <joomla.release>3.9.8-php7.1-fpm-alpine</joomla.release>
        <nginx.release>1.17-alpine</nginx.release>
        <cms.release>wbh-cms-${maven.build.timestamp}</cms.release>
        <hbk.hostname>www.${domain}</hbk.hostname>
        <docker.dir>${project.basedir}/src/main/docker</docker.dir>
        <docker.project.name>hbk</docker.project.name>
        <docker-compose.dir>${project.basedir}/target/${project.artifactId}-${project.version}</docker-compose.dir>
        <docker-compose.file>${docker-compose.dir}/docker-compose.yml</docker-compose.file>
        <docker-compose.dev.file>${docker-compose.dir}/docker-compose.dev.yml</docker-compose.dev.file>
        <docker-compose.prod.file>${docker-compose.dir}/docker-compose.prod.yml</docker-compose.prod.file>
    </properties>
    <dependencies>
        <dependency>
            <groupId>wbh.bookworm</groupId>
            <artifactId>wbh.bookworm.cms.approxy</artifactId>
            <version>LocalBuild</version>
            <type>zip</type>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>bookworm.docker.local</id>
            <properties>
                <domain>local</domain>
                <hbk.hostname>wbhonline.${domain}</hbk.hostname>
                <tls.path>/etc/letsencrypt/selfsigned</tls.path>
                <nginx.enable.servers>
                    wbhonline
                </nginx.enable.servers>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <version>4.0.0</version>
                        <configuration>
                            <projectName>dev-wbh-cms-${maven.build.timestamp}</projectName>
                        </configuration>
                        <executions>
                            <execution>
                                <id>dev-up</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>up</goal>
                                </goals>
                                <configuration>
                                    <composeFiles>
                                        <composeFile>${docker-compose.file}</composeFile>
                                        <composeFile>${docker-compose.dev.file}</composeFile>
                                    </composeFiles>
                                    <detachedMode>true</detachedMode>
                                    <removeOrphans>true</removeOrphans>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>bookworm.docker.prod</id>
            <properties>
                <tls.path>/etc/letsencrypt/live</tls.path>
                <nginx.enable.servers>
                    wbhonline
                </nginx.enable.servers>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.dkanejs.maven.plugins</groupId>
                        <artifactId>docker-compose-maven-plugin</artifactId>
                        <version>4.0.0</version>
                        <configuration>
                            <projectName>prod-wbh-cms-${maven.build.timestamp}</projectName>
                        </configuration>
                        <executions>
                            <execution>
                                <id>prod-up</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>up</goal>
                                </goals>
                                <configuration>
                                    <composeFiles>
                                        <composeFile>${docker-compose.file}</composeFile>
                                        <composeFile>${docker-compose.prod.file}</composeFile>
                                    </composeFiles>
                                    <detachedMode>true</detachedMode>
                                    <removeOrphans>true</removeOrphans>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>wbh.bookworm</groupId>
                                    <artifactId>wbh.bookworm.cms.approxy</artifactId>
                                    <type>zip</type>
                                    <outputDirectory>target/classes/joomla</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>prepare-docker-compose</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/container.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>dist</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/assembly/dist.xml</descriptor>
                            </descriptors>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <version>4.0.0</version>
                <configuration>
                    <verbose>true</verbose>
                    <host>unix:///var/run/docker.sock</host>
                    <composeFiles>
                        <composeFile>${docker-compose.file}</composeFile>
                    </composeFiles>
                    <envVars>
                        <DOMAIN>${domain}</DOMAIN>
                        <ALPINE_RELEASE>${alpine.release}</ALPINE_RELEASE>
                        <MYSQL_RELEASE>${mysql.release}</MYSQL_RELEASE>
                        <JOOMLA_RELEASE>${joomla.release}</JOOMLA_RELEASE>
                        <NGINX_RELEASE>${nginx.release}</NGINX_RELEASE>
                        <CMS_RELEASE>${cms.release}</CMS_RELEASE>
                        <HBK_HOSTNAME>${hbk.hostname}.${domain}</HBK_HOSTNAME>
                    </envVars>
                    <buildArgs>
                        <noCache>true</noCache>
                        <forceRm>true</forceRm>
                    </buildArgs>
                    <removeOrphans>true</removeOrphans>
                </configuration>
                <executions>
                    <execution>
                        <id>build-cms-rproxy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>cms-rproxy</services>
                            <buildArgs>
                                <args>
                                    <NGINX_RELEASE>${nginx.release}</NGINX_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-rproxy-certbot</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>rproxy-certbot</services>
                            <buildArgs>
                                <args>
                                    <ALPINE_RELEASE>${alpine.release}</ALPINE_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-mysql</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>mysql</services>
                            <buildArgs>
                                <args>
                                    <MYSQL_RELEASE>${mysql.release}</MYSQL_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-joomla</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>joomla</services>
                            <buildArgs>
                                <args>
                                    <JOOMLA_RELEASE>${joomla.release}</JOOMLA_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-assets-ssh</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <services>assets-ssh</services>
                            <buildArgs>
                                <args>
                                    <ALPINE_RELEASE>${alpine.release}</ALPINE_RELEASE>
                                </args>
                            </buildArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
